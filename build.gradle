plugins {
    id 'groovy'
}

group 'de.dfki.mary'
version '6.0-SNAPSHOT'

repositories {
    jcenter()
    ivy {
        url 'https://dl.bintray.com/marytts/marytts'
        layout 'pattern', {
            artifact '[organisation]/[module]/[artifact].[ext]'
        }
    }
    ivy {
        url 'http://festvox.org/examples'
        layout 'pattern', {
            artifact '[module]/packed/[artifact].[ext]'
        }
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }
}

configurations {
    testData
    integrationTestCompile {
        extendsFrom testCompile
    }
    integrationTestRuntime {
        extendsFrom testRuntime
    }
}

dependencies {
    compile group: 'de.dfki.mary', name: 'marytts-runtime', version: '5.2'
    compile(group: 'de.dfki.mary', name: 'marytts-builder', version: '5.2') {
        exclude module: 'sgt'
        exclude module: 'mwdumper'
    }
    testCompile group: 'org.testng', name: 'testng', version: '6.9.10'
    testData group: 'org.festvox', name: 'cmu_time_awb', classifier: 'ldom', ext: 'tar.bz2'
}

processTestResources {
    from configurations.testData
    filesMatching '*.tar.bz2', { tarFileDetails ->
        copy {
            from tarTree(tarFileDetails.file)
            into destinationDir
            include '**/wav/*.wav'
            include '**/pm/*.pm'
            includeEmptyDirs = false
        }
        tarFileDetails.exclude()
    }
    doLast {
        def jsonFile = file("$sourceSets.test.output.resourcesDir/testEnv.json")
        def testEnv = [testResourceDir: "$sourceSets.test.output.resourcesDir/cmu_time_awb"]
        jsonFile.text = new groovy.json.JsonBuilder(testEnv).toPrettyString()
    }
}

task integrationTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'
    check.dependsOn it
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

tasks.withType(Test) {
    useTestNG()
}
